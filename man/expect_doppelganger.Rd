% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testthat-ui.R
\name{expect_doppelganger}
\alias{expect_doppelganger}
\title{Does a figure look like its expected output?}
\usage{
expect_doppelganger(fig, fig_name, path = NULL, ...)
}
\arguments{
\item{fig}{A figure to test.}

\item{fig_name}{The name of the test case. This will be used as the
base for the SVG file name.}

\item{path}{The path where the test case should be stored, relative
to the \code{tests/figs/} folder. If \code{NULL} (the default),
the current testthat context is used to create a
subfolder. Supply an empty string \code{""} if you want the
figures to be stored in the root folder.}

\item{...}{Additional arguments passed to
\code{\link[testthat]{compare}()} to control specifics of
comparison.}
}
\description{
If the test has never been validated yet, the test is skipped. If
the test has previously been validated but \code{fig} does not look
like its expected output, an error is issued. Use
\code{\link{validate_cases}()} or \code{\link{manage_cases}()} to
(re)validate the test.
}
\details{
\code{fig} can be a ggplot object, a recordedplot, a function to be
called, or more generally any object with a \code{print} method. If
a ggplot object, a dependency for ggplot2 is automatically added
(see \code{\link{add_dependency}()}).
}
\examples{
\dontrun{
disp_hist_base <- function() hist(mtcars$disp)
disp_hist_ggplot <- ggplot(mtcars, aes(disp)) + geom_histogram()

expect_doppelganger(disp_hist_base, "disp-histogram-base")
expect_doppelganger(disp_hist_ggplot, "disp-histogram-ggplot")
}
}

